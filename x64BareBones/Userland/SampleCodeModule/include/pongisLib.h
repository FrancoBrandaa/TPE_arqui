#ifndef PORO_SPRITE_H
#define PORO_SPRITE_H

#include <stdint.h>
#include<libc.h>

#define FIXED_SHIFT 15   // Q1.15 format
#define ANGLES      360
#define QUAD_SIZE   91   // 0°–90° inclusive
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647

//noc si va esto aca despues hay que ordenar todo
typedef enum {
    COLOR_BLACK       = 0x000000,
    COLOR_WHITE       = 0xFFFFFF,
    COLOR_RED         = 0xFF0000,
    COLOR_GREEN       = 0x00FF00,
    COLOR_BLUE        = 0x0000FF,
    COLOR_YELLOW      = 0xFFFF00,
    COLOR_CYAN        = 0x00FFFF,
    COLOR_MAGENTA     = 0xFF00FF,
    COLOR_ORANGE      = 0xFFA500,
    COLOR_PINK        = 0xFFC0CB,
    COLOR_BROWN       = 0xA52A2A,
    COLOR_LIGHTGREY   = 0xD3D3D3,
    COLOR_LIGHTBLUE   = 0xADD8E6,
    COLOR_LIGHTGREEN  = 0x90EE90,
    COLOR_LIGHTRED    = 0xFFA07A,
    COLOR_LIGHTPINK   = 0xFFB6C1,
    COLOR_LIGHTBROWN  = 0xD2B48C,
    COLOR_DARKBLUE    = 0x00008B,
    COLOR_DARKGREEN   = 0x006400,
    COLOR_DARKRED     = 0x8B0000,
    COLOR_DARKYELLOW  = 0x9B870C,
    COLOR_DARKMAGENTA = 0x800080,
    COLOR_DARKCYAN    = 0x008B8B,
    COLOR_DARKORANGE  = 0xFF8C00,
    COLOR_DARKPINK    = 0xFF1493,
    COLOR_DARKBROWN   = 0x654321
} Color;

static const int16_t sin_table_q[QUAD_SIZE] = {
    0,    572,   1144,   1715,   2286,   2856,   3425,   3993,   4560,   5126,
    5690,   6252,   6813,   7371,   7927,   8481,   9032,   9580,  10126,  10668,
   11207,  11743,  12275,  12803,  13328,  13848,  14364,  14876,  15383,  15886,
   16383,  16876,  17364,  17846,  18323,  18794,  19260,  19720,  20173,  20621,
   21062,  21497,  21925,  22347,  22762,  23170,  23571,  23964,  24351,  24730,
   25101,  25465,  25821,  26169,  26509,  26841,  27165,  27481,  27788,  28087,
   28377,  28659,  28932,  29196,  29451,  29697,  29934,  30162,  30381,  30591,
   30791,  30982,  31163,  31335,  31498,  31650,  31794,  31927,  32051,  32165,
   32269,  32364,  32448,  32523,  32587,  32642,  32687,  32722,  32747,  32762,
   32767
};

typedef struct{
    float x, y;       // posición actual
    float dx, dy; 
    float speed;      // módulo de la velocidad
    float angle;     // dirección y velocidad (paso por frame)
    float radius;
    int color;
}Object;
void applyFriction(Object* b, float deceleration);
int get_sin(int angle);
int get_cos(int angle);
void applyControls(Object* b, char keyPressed);

// Top-down Poro sprite, resized from (1024, 1024) to 32×32 pixels
// Transparent pixels use the magic color 0xFF00FF

static const uint32_t poro_sprite_32[32 * 32] = {
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x604531, 0x604531, 0x966A4C, 0x604531, 0x7B583E, 0x966A4C, 0x000000, 0xEFEFEF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xEFEFEF, 0x000000, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x966A4C, 0x604531, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0x966A4C, 0x604531, 0x604531, 0x966A4C, 0x604531, 0x7B583E, 0x966A4C, 0x966A4C, 0x000000, 0x000000, 0xC7C7C7, 0x000000, 0xC7C7C7, 0xC7C7C7, 0x000000, 0x966A4C, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0x000000, 0x966A4C, 0x604531, 0x604531, 0x966A4C, 0x604531, 0x7B583E, 0x966A4C, 0x966A4C, 0x000000, 0x000000, 0xC7C7C7, 0x000000, 0xC7C7C7, 0xC7C7C7, 0x000000, 0x966A4C, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0x966A4C, 0x604531, 0x604531, 0x966A4C, 0x604531, 0x2F2117, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0x000000, 0x604531, 0x966A4C, 0x966A4C, 0x604531, 0x966A4C, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x656565, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x656565, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xE4E4E4, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x7D7D7D, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xEDB1AF, 0x745756, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xEDB1AF, 0x745756, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xF7F7F7, 0xF7F7F7, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x626262, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xC7C7C7, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0x000000, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xE2E2E2, 0xC7C7C7, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0x000000, 0xEDB1AF, 0xEDB1AF, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0x000000, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xE2E2E2, 0xC7C7C7, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0x000000, 0xEDB1AF, 0xEDB1AF, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xE2E2E2, 0xC7C7C7, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xC7C7C7, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0x939393, 0x555555, 0x555555, 0xDFDFDF, 0xDFDFDF, 0xD3D3D3, 0xC7C7C7, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xDFDFDF, 0xDFDFDF, 0xDFDFDF, 0x555555, 0x8A8A8A, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0x000000, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0xC7C7C7, 0x000000, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 0xF7F7F7, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0xEDB1AF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x000000, 0x7A7A7A, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF6F6F6, 0xF8F8F8, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0x000000, 0x000000, 0x828282, 0xEFEFEF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0xF6F6F6, 0xEFEFEF, 0x000000, 0x000000, 0x000000, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
    0xFFFFFF, 0xEFEFEF, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xF6F6F6, 0xF8F8F8, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 0xFFFFFF, 0xEFEFEF, 
};

static const uint32_t poro_sprite[32 * 32] = {
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040206, 0x040106, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x050205, 0xFFFEF2, 0xFCF7E7, 0x0D090D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040207, 0x050406, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x20181C, 0x7E4F2E, 0xAC794F, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1D, 0xFF00FF, 0x1F1A1D, 0xFAF2E2, 0xF2E5D2, 0x1F191C, 0xFF00FF, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x20171B, 0xAC794F, 0x7D502E, 0x1F171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x241B1E, 0x7B5030, 0x7C502E, 0x7D4F2F, 0xAB774F, 0x1E181B, 0xFF00FF, 0x000000, 0xF9F2E1, 0x20191F, 0xD4C8C1, 0xFAF1E1, 0xFBF2E0, 0xBEB2AB, 0x19151C, 0xFBF1E0, 0x1F181D, 0xFF00FF, 0x1E191D, 0xAC7850, 0x7D5031, 0x7E5230, 0x7E4F30, 0x1D181A, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x271B1F, 0x7F522F, 0x523321, 0x7E4F2F, 0x794D2E, 0xAC794E, 0x20191B, 0x010101, 0xF9F1E2, 0xFAF2E2, 0xFAF2E1, 0xFBF3E3, 0xFBF3E1, 0xF8EEDD, 0xD5CAC1, 0xFBF1DF, 0x231A1F, 0x1E171B, 0xAC7A4E, 0x7D4F2E, 0x7E512F, 0x533222, 0x7F5030, 0x21171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181C, 0x533324, 0x20171B, 0x7F5130, 0x523322, 0xAE7B51, 0x583725, 0x010001, 0xFBF3E1, 0xFCF2E3, 0xFCF3E2, 0xFBF3E2, 0xFBF1E2, 0xFAF3E1, 0xFCF3E1, 0xFAF4E1, 0x1F181D, 0x543524, 0xAD7850, 0x523224, 0x7E5130, 0x1F171C, 0x533225, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181D, 0x1C161C, 0x513223, 0x513122, 0x523224, 0x1F161C, 0xB6A6A3, 0xFBF2E1, 0xFBF2E1, 0xFBF3E1, 0xFCF3E3, 0xFAF5E1, 0xFBF3E3, 0xFBF4E3, 0xFCF2E1, 0xD6C8C3, 0x1E181C, 0x543323, 0x533323, 0x513323, 0x1D171B, 0x1F171D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181B, 0x1E181C, 0x4F3124, 0x1F151C, 0xD3C9C3, 0xFAF2E3, 0xFAF4E3, 0xFBF1E2, 0xFAF2E2, 0xFAF4E2, 0xFCF3E3, 0xFCF2E2, 0xFBF4E3, 0xFBF3E1, 0xFBF1E0, 0xD3C8C1, 0x1E191D, 0x4E3222, 0x1E181C, 0x1D171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x4E3022, 0x1D171D, 0x1E181E, 0xD2C8C0, 0xFBF2E1, 0xFAF2DF, 0xFBF3E3, 0xFBF2E2, 0xFBF2E3, 0xFBF3E2, 0xFCF5E2, 0xFBF3E4, 0xFBF5E2, 0xFCF1E2, 0xFAF3E1, 0xFBF0E1, 0xD4C7C2, 0x1F181C, 0x1E181E, 0x4E2F24, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1B20, 0xD0C4C0, 0xD1C6C0, 0xFBF3E1, 0xFAF2E1, 0xFAF2E2, 0xFAF3E2, 0xFBF4E2, 0xFBF3E3, 0xFBF4E3, 0xFBF4E4, 0xFBF4E2, 0xFAF4E2, 0xFCF4E3, 0xFBF4E3, 0xFBF2E3, 0xFBF3E2, 0xFBF3E1, 0xFAF1E1, 0xD0C6BE, 0xD0C5BE, 0x1F1B20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F191F, 0xFAF3E2, 0xFCF2E3, 0xFBF3E2, 0xF9F3E2, 0xFCF4E3, 0xFBF4E3, 0xFCF3E3, 0xFCF4E1, 0xFCF3E3, 0xFCF3E4, 0xFCF4E2, 0xFBF3E3, 0xFCF3E1, 0xFCF3E2, 0xFBF3E2, 0xFCF2E2, 0xFAF2E1, 0xFAF2E1, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1922, 0xD2C6BF, 0xD2C6C3, 0xFAF1E1, 0xFDF3E3, 0xFBF3E4, 0xFBF3E0, 0xFAF5E3, 0xFBF3E2, 0xFCF2E3, 0xFAF4E2, 0xFCF3E2, 0xFBF4E1, 0xFBF4E3, 0xFCF4E3, 0xFBF4E2, 0xFBF3E2, 0xFBF2E2, 0xFAF1E1, 0xD3C9C2, 0xD2C7BF, 0x201921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x262129, 0xD0C5BC, 0xD1C7C0, 0xFAF2E2, 0xFBF2E3, 0xF9F2E2, 0xFCF4E3, 0xFBF3E4, 0xFCF4E3, 0xFBF3E1, 0xFBF3E2, 0xFBF3E3, 0xFDF4E3, 0xFAF5E3, 0xFBF4E4, 0xFCF4E3, 0xFCF2E2, 0xFCF5E3, 0xFBF2E2, 0xFBF4E2, 0xFBF3E2, 0xD2C7BF, 0xCFC7BC, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x211C22, 0xAFA3A6, 0xFBF1E1, 0xFAF3E2, 0xFBF3E1, 0xD1C5C1, 0xBEAFAC, 0xFAF4E2, 0xFCF3E3, 0xFBF4E2, 0xFCF4E4, 0xFBF3E2, 0xFBF3E2, 0xFBF4E3, 0xFBF2E3, 0xD4C8C2, 0xD3C9C1, 0xFBF3E2, 0xFAF2E2, 0xFAF3E0, 0xAEA6A7, 0x201A22, 0x1F1720, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201921, 0xD0C6C0, 0xFBF2E2, 0xFAF1E3, 0xD2C7C0, 0xFBF1E2, 0xFAF2E0, 0xFBF3E4, 0xFBF3E4, 0xFBF3E3, 0xFBF3E1, 0xFBF4E3, 0xFBF4E3, 0xFBF3E4, 0xFBF3E3, 0xFBF4E2, 0xFBF1E0, 0xD3C7C1, 0xFCF3E2, 0xF9F2E1, 0xD2C6C0, 0x1F1A21, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201D24, 0xD1C6BE, 0xD3C7C0, 0xF9F2E2, 0xD2C9C2, 0xFAF3E2, 0xFFFFF3, 0xC4B5B2, 0xFBF3E2, 0xFBF2E3, 0xFCF3E2, 0xFDF3E3, 0xFCF2E2, 0xFBF6E3, 0xD6CBC4, 0xF9F0DF, 0xFBF3E2, 0xD4C8C1, 0xFBF2E2, 0xD1C6C1, 0xD0C7BF, 0x1F1921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201B21, 0xAEA5A7, 0xD2C6BF, 0xF9F1E2, 0xAEA3A6, 0xADA1A5, 0xADA4A7, 0x9C878E, 0xFAF2E2, 0xD3C6C2, 0xFAF3E2, 0xFAF1E1, 0xD5C8C1, 0xFBF4E2, 0xB6A9AA, 0xAEA2A6, 0xACA4A4, 0xAEA4A6, 0xF9F2E1, 0xD2C6C0, 0xADA3A4, 0x1F1A1E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x211A20, 0xB0A7A6, 0xD2C5C0, 0xD3C8C0, 0xD2C8C1, 0xE8DFD2, 0x9A888C, 0xFFFDED, 0xD4C6C2, 0xFAF0E2, 0xFBF2E1, 0xD1C6BF, 0xFAF3E3, 0xB5AAAB, 0xCEC4BD, 0xD3C9C2, 0xD3C7C0, 0xD2C7BF, 0xAEA3A3, 0x201A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1820, 0xAFA4A6, 0xD2C6BF, 0xD2C8BF, 0xFAF1E1, 0xFFFFF1, 0xAEA4A6, 0xA59A9D, 0xD1C7C1, 0xD2C5C0, 0xD2C8BF, 0xD3C6BE, 0xAFA4A5, 0xAEA6A7, 0xF3E8D7, 0xFAF1E0, 0xD2C6C0, 0xD0C6BF, 0xAFA4A5, 0x1F191F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201920, 0xACA3A5, 0xD2C6BF, 0xFAF3DF, 0xF9F0E1, 0xFFFDF1, 0xD3C7BF, 0xD3C8BF, 0xF9F2DF, 0xFAF1DF, 0xD1C4BF, 0xD2C7C0, 0xFAF3E2, 0xF8F2E0, 0xFAF0DF, 0xD0C7BF, 0xAFA2A5, 0x201A20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1920, 0xAFA3A5, 0xD3C6C0, 0xE3D6CC, 0x9E9298, 0xD1C7C0, 0xD2C5BF, 0xF8F0DE, 0xF8EFDC, 0xD3C7C1, 0xD1C5BF, 0xAFA5A4, 0xCFC1BC, 0xD3C7BE, 0xAFA3A6, 0x1F1A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181F, 0x1E181F, 0x030101, 0xADA2A4, 0x9F9499, 0xD2C7C0, 0xACA1A3, 0xB2A5A7, 0xCFC6BE, 0xAFA4A3, 0xAEA2A4, 0x201A1E, 0x1F1A1F, 0x1D181F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x040104, 0xADA2A4, 0xACA3A3, 0xACA1A4, 0xAEA2A4, 0x201B1F, 0x201B1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1E, 0x21191D, 0x20191C, 0x1D191E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
};

#endif // PORO_SPRITE_H