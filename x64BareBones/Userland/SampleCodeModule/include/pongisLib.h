#ifndef PORO_SPRITE_H
#define PORO_SPRITE_H

#include <stdint.h>
#include <libc.h>
#include <stdbool.h>

#define FIXED_SHIFT 15   // Q1.15 format
#define ANGLES      360
#define QUAD_SIZE   91   // 0°–90° inclusive
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647

static const int16_t sin_table_q[QUAD_SIZE] = 
{
    0,    572,   1144,   1715,   2286,   2856,   3425,   3993,   4560,   5126,
    5690,   6252,   6813,   7371,   7927,   8481,   9032,   9580,  10126,  10668,
   11207,  11743,  12275,  12803,  13328,  13848,  14364,  14876,  15383,  15886,
   16383,  16876,  17364,  17846,  18323,  18794,  19260,  19720,  20173,  20621,
   21062,  21497,  21925,  22347,  22762,  23170,  23571,  23964,  24351,  24730,
   25101,  25465,  25821,  26169,  26509,  26841,  27165,  27481,  27788,  28087,
   28377,  28659,  28932,  29196,  29451,  29697,  29934,  30162,  30381,  30591,
   30791,  30982,  31163,  31335,  31498,  31650,  31794,  31927,  32051,  32165,
   32269,  32364,  32448,  32523,  32587,  32642,  32687,  32722,  32747,  32762,
   32767
};

typedef struct
{
    float x, y;       // posición actual
    float dx, dy; 
    float speed;      // módulo de la velocidad
    float angle;     // dirección y velocidad (paso por frame)
    float radius;
    uint32_t color;
}Object;

/**
 * @brief Generates a pseudo-random number.
 * 
 * @return int A pseudo-random number between 0 and 32767.
 */
int rand();

/**
 * @brief Seeds the random number generator with a specific value.
 * 
 * @param seed The seed value to initialize the random number generator.
 */
void srand(unsigned int seed);

/**
 * @brief Seeds the random number generator using the current system time.
 * 
 * This function uses the current hour, minute, and second to create a seed
 * for more varied random number generation.
 */
void srand_from_time();

/**
 * @brief Updates the position and handles collision detection for a game object.
 * 
 * This function moves the object according to its velocity (dx, dy) and handles
 * bouncing off screen boundaries with proper angle calculations.
 * 
 * @param b Pointer to the Object to update.
 */
void updateObject(Object *b);

/**
 * @brief Updates the position of a player object with wall collision handling.
 * 
 * Unlike updateObject, this function stops the player at walls instead of bouncing,
 * allowing sliding along walls when hitting them at an angle.
 * 
 * @param b Pointer to the player Object to update.
 */
void updatePlayer(Object *b);

/**
 * @brief Draws a circular ball object on the screen.
 * 
 * @param b Pointer to the Object representing the ball to draw.
 */
void drawBall(Object *b);

/**
 * @brief Draws a player character using a rotated sprite.
 * 
 * @param p Pointer to the Object representing the player.
 * @param scale Scale factor for the sprite size.
 * @param player Player number (1 or 2) to determine which sprite to use.
 */
void drawPlayer(const Object *p, int scale, int player);

/**
 * @brief Draws a rotated and scaled Poro sprite at the specified location.
 * 
 * @param centerX X coordinate of the sprite center.
 * @param centerY Y coordinate of the sprite center.
 * @param scale Scale factor for the sprite size.
 * @param angleDeg Rotation angle in degrees.
 * @param player Player number (1 or 2) to select the appropriate sprite.
 */
void drawPoroRotated(int centerX, int centerY, int scale, int angleDeg, int player);

/**
 * @brief Applies friction to slow down a moving object.
 * 
 * @param b Pointer to the Object to apply friction to.
 * @param deceleration Amount of speed to reduce per frame.
 */
void applyFriction(Object* b, float deceleration);

/**
 * @brief Handles player input and applies movement controls to a player object.
 * 
 * @param b Pointer to the player Object to control.
 * @param player Player number (1 or 2) to determine which keys to check.
 */
void applyControls(Object* b, int player);

/**
 * @brief Calculates the sine of an angle using a lookup table.
 * 
 * @param angle Angle in degrees.
 * @return int Sine value in Q15 fixed-point format.
 */
int get_sin(int angle);

/**
 * @brief Calculates the cosine of an angle using a lookup table.
 * 
 * @param angle Angle in degrees.
 * @return int Cosine value in Q15 fixed-point format.
 */
int get_cos(int angle);

/**
 * @brief Calculates the integer square root of a number.
 * 
 * @param x The number to calculate the square root of.
 * @return uint32_t The integer square root of x.
 */
uint32_t isqrt(uint32_t x);

/**
 * @brief Checks if two circular objects are colliding.
 * 
 * @param a Pointer to the first Object.
 * @param b Pointer to the second Object.
 * @return int 1 if the objects are colliding, 0 otherwise.
 */
int checkCollision(Object *a, Object *b);

/**
 * @brief Draws the Poro menu sprite on the screen.
 * 
 * This function renders a large Poro sprite used in the game menu
 * at a fixed position and scale.
 */
void printPoroMenu(void);

static const uint32_t poro_sprite[32 * 32] = {
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040206, 0x040106, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x050205, 0xFFFEF2, 0xFCF7E7, 0x0D090D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040207, 0x050406, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x20181C, 0x7E4F2E, 0xAC794F, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1D, 0xFF00FF, 0x1F1A1D, 0xFAF2E2, 0xF2E5D2, 0x1F191C, 0xFF00FF, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x0000FF, 0xAC794F, 0x7D502E, 0x1F171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x241B1E, 0x7B5030, 0x7C502E, 0x7D4F2F, 0xAB774F, 0x1E181B, 0xFF00FF, 0x000000, 0xF9F2E1, 0x20191F, 0xD4C8C1, 0xFAF1E1, 0xFBF2E0, 0xBEB2AB, 0x19151C, 0xFBF1E0, 0x1F181D, 0xFF00FF, 0x1E191D, 0x0000FF, 0x0000FF, 0x7E5230, 0x7E4F30, 0x1D181A, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x271B1F, 0x7F522F, 0x523321, 0x7E4F2F, 0x794D2E, 0xAC794E, 0x20191B, 0x010101, 0xF9F1E2, 0xFAF2E2, 0xFAF2E1, 0xFBF3E3, 0xFBF3E1, 0xF8EEDD, 0xD5CAC1, 0xFBF1DF, 0x231A1F, 0x1E171B, 0xAC7A4E, 0x7D4F2E, 0x0000FF, 0x0000FF, 0x7F5030, 0x21171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181C, 0x533324, 0x20171B, 0x7F5130, 0x523322, 0xAE7B51, 0x583725, 0x010001, 0xFBF3E1, 0xFCF2E3, 0xFCF3E2, 0xFBF3E2, 0xFBF1E2, 0xFAF3E1, 0xFCF3E1, 0xFAF4E1, 0x1F181D, 0x543524, 0xAD7850, 0x523224, 0x7E5130, 0x0000FF, 0x0000FF, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181D, 0x1C161C, 0x513223, 0x513122, 0x523224, 0x1F161C, 0xB6A6A3, 0xFBF2E1, 0xFBF2E1, 0xFBF3E1, 0xFCF3E3, 0xFAF5E1, 0xFBF3E3, 0xFBF4E3, 0xFCF2E1, 0xD6C8C3, 0x1E181C, 0x543323, 0x533323, 0x513323, 0x1D171B, 0x0000FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181B, 0x1E181C, 0x4F3124, 0x1F151C, 0xD3C9C3, 0xFAF2E3, 0xFAF4E3, 0xFBF1E2, 0xFAF2E2, 0xFAF4E2, 0xFCF3E3, 0xFCF2E2, 0xFBF4E3, 0xFBF3E1, 0xFBF1E0, 0xD3C8C1, 0x1E191D, 0x4E3222, 0x1E181C, 0x1D171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x4E3022, 0x1D171D, 0x1E181E, 0xD2C8C0, 0xFBF2E1, 0xFAF2DF, 0xFBF3E3, 0xFBF2E2, 0xFBF2E3, 0xFBF3E2, 0xFCF5E2, 0xFBF3E4, 0xFBF5E2, 0xFCF1E2, 0xFAF3E1, 0xFBF0E1, 0xD4C7C2, 0x1F181C, 0x1E181E, 0x4E2F24, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1B20, 0xD0C4C0, 0xD1C6C0, 0xFBF3E1, 0xFAF2E1, 0xFAF2E2, 0xFAF3E2, 0xFBF4E2, 0xFBF3E3, 0xFBF4E3, 0xFBF4E4, 0xFBF4E2, 0xFAF4E2, 0xFCF4E3, 0xFBF4E3, 0xFBF2E3, 0xFBF3E2, 0xFBF3E1, 0xFAF1E1, 0xD0C6BE, 0xD0C5BE, 0x1F1B20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F191F, 0xFAF3E2, 0xFCF2E3, 0xFBF3E2, 0xF9F3E2, 0xFCF4E3, 0xFBF4E3, 0xFCF3E3, 0xFCF4E1, 0xFCF3E3, 0xFCF3E4, 0xFCF4E2, 0xFBF3E3, 0xFCF3E1, 0xFCF3E2, 0xFBF3E2, 0xFCF2E2, 0xFAF2E1, 0xFAF2E1, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1922, 0xD2C6BF, 0xD2C6C3, 0xFAF1E1, 0xFDF3E3, 0xFBF3E4, 0xFBF3E0, 0xFAF5E3, 0xFBF3E2, 0xFCF2E3, 0xFAF4E2, 0xFCF3E2, 0xFBF4E1, 0xFBF4E3, 0xFCF4E3, 0xFBF4E2, 0xFBF3E2, 0xFBF2E2, 0xFAF1E1, 0xD3C9C2, 0xD2C7BF, 0x201921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x262129, 0xD0C5BC, 0xD1C7C0, 0xFAF2E2, 0xFBF2E3, 0xF9F2E2, 0xFCF4E3, 0xFBF3E4, 0xFCF4E3, 0xFBF3E1, 0xFBF3E2, 0xFBF3E3, 0xFDF4E3, 0xFAF5E3, 0xFBF4E4, 0xFCF4E3, 0xFCF2E2, 0xFCF5E3, 0xFBF2E2, 0xFBF4E2, 0xFBF3E2, 0xD2C7BF, 0xCFC7BC, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x211C22, 0xAFA3A6, 0xFBF1E1, 0xFAF3E2, 0xFBF3E1, 0xD1C5C1, 0xBEAFAC, 0xFAF4E2, 0xFCF3E3, 0xFBF4E2, 0xFCF4E4, 0xFBF3E2, 0xFBF3E2, 0xFBF4E3, 0xFBF2E3, 0xD4C8C2, 0xD3C9C1, 0xFBF3E2, 0xFAF2E2, 0xFAF3E0, 0xAEA6A7, 0x201A22, 0x1F1720, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201921, 0xD0C6C0, 0xFBF2E2, 0xFAF1E3, 0xD2C7C0, 0xFBF1E2, 0xFAF2E0, 0xFBF3E4, 0xFBF3E4, 0xFBF3E3, 0xFBF3E1, 0xFBF4E3, 0xFBF4E3, 0xFBF3E4, 0xFBF3E3, 0xFBF4E2, 0xFBF1E0, 0xD3C7C1, 0xFCF3E2, 0xF9F2E1, 0xD2C6C0, 0x1F1A21, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201D24, 0xD1C6BE, 0xD3C7C0, 0xF9F2E2, 0xD2C9C2, 0xFAF3E2, 0xFFFFF3, 0xC4B5B2, 0xFBF3E2, 0xFBF2E3, 0xFCF3E2, 0xFDF3E3, 0xFCF2E2, 0xFBF6E3, 0xD6CBC4, 0xF9F0DF, 0xFBF3E2, 0xD4C8C1, 0xFBF2E2, 0xD1C6C1, 0xD0C7BF, 0x1F1921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201B21, 0xAEA5A7, 0xD2C6BF, 0xF9F1E2, 0xAEA3A6, 0xADA1A5, 0xADA4A7, 0x9C878E, 0xFAF2E2, 0xD3C6C2, 0xFAF3E2, 0xFAF1E1, 0xD5C8C1, 0xFBF4E2, 0xB6A9AA, 0xAEA2A6, 0xACA4A4, 0xAEA4A6, 0xF9F2E1, 0xD2C6C0, 0xADA3A4, 0x1F1A1E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x211A20, 0xB0A7A6, 0xD2C5C0, 0xD3C8C0, 0xD2C8C1, 0xE8DFD2, 0x9A888C, 0xFFFDED, 0xD4C6C2, 0xFAF0E2, 0xFBF2E1, 0xD1C6BF, 0xFAF3E3, 0xB5AAAB, 0xCEC4BD, 0xD3C9C2, 0xD3C7C0, 0xD2C7BF, 0xAEA3A3, 0x201A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1820, 0xAFA4A6, 0xD2C6BF, 0xD2C8BF, 0xFAF1E1, 0xFFFFF1, 0xAEA4A6, 0xA59A9D, 0xD1C7C1, 0xD2C5C0, 0xD2C8BF, 0xD3C6BE, 0xAFA4A5, 0xAEA6A7, 0xF3E8D7, 0xFAF1E0, 0xD2C6C0, 0xD0C6BF, 0xAFA4A5, 0x1F191F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201920, 0xACA3A5, 0xD2C6BF, 0xFAF3DF, 0xF9F0E1, 0xFFFDF1, 0xD3C7BF, 0xD3C8BF, 0xF9F2DF, 0xFAF1DF, 0xD1C4BF, 0xD2C7C0, 0xFAF3E2, 0xF8F2E0, 0xFAF0DF, 0xD0C7BF, 0xAFA2A5, 0x201A20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1920, 0xAFA3A5, 0xD3C6C0, 0xE3D6CC, 0x9E9298, 0xD1C7C0, 0xD2C5BF, 0xF8F0DE, 0xF8EFDC, 0xD3C7C1, 0xD1C5BF, 0xAFA5A4, 0xCFC1BC, 0xD3C7BE, 0xAFA3A6, 0x1F1A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181F, 0x1E181F, 0x030101, 0xADA2A4, 0x9F9499, 0xD2C7C0, 0xACA1A3, 0xB2A5A7, 0xCFC6BE, 0xAFA4A3, 0xAEA2A4, 0x201A1E, 0x1F1A1F, 0x1D181F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x040104, 0xADA2A4, 0xACA3A3, 0xACA1A4, 0xAEA2A4, 0x201B1F, 0x201B1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1E, 0x21191D, 0x20191C, 0x1D191E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
};


static const uint32_t poro_sprite_2[32 * 32] = {
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040206, 0x040106, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x050205, 0xFFFEF2, 0xFCF7E7, 0x0D090D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x040207, 0x050406, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x20181C, 0x7E4F2E, 0xAC794F, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1D, 0xFF00FF, 0x1F1A1D, 0xFAF2E2, 0xF2E5D2, 0x1F191C, 0xFF00FF, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF0000, 0xAC794F, 0x7D502E, 0x1F171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x241B1E, 0x7B5030, 0x7C502E, 0x7D4F2F, 0xAB774F, 0x1E181B, 0xFF00FF, 0x000000, 0xF9F2E1, 0x20191F, 0xD4C8C1, 0xFAF1E1, 0xFBF2E0, 0xBEB2AB, 0x19151C, 0xFBF1E0, 0x1F181D, 0xFF00FF, 0x1E191D, 0xFF0000, 0xFF0000, 0x7E5230, 0x7E4F30, 0x1D181A, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x271B1F, 0x7F522F, 0x523321, 0x7E4F2F, 0x794D2E, 0xAC794E, 0x20191B, 0x010101, 0xF9F1E2, 0xFAF2E2, 0xFAF2E1, 0xFBF3E3, 0xFBF3E1, 0xF8EEDD, 0xD5CAC1, 0xFBF1DF, 0x231A1F, 0x1E171B, 0xAC7A4E, 0x7D4F2E, 0xFF0000, 0xFF0000, 0x7F5030, 0x21171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181C, 0x533324, 0x20171B, 0x7F5130, 0x523322, 0xAE7B51, 0x583725, 0x010001, 0xFBF3E1, 0xFCF2E3, 0xFCF3E2, 0xFBF3E2, 0xFBF1E2, 0xFAF3E1, 0xFCF3E1, 0xFAF4E1, 0x1F181D, 0x543524, 0xAD7850, 0x523224, 0x7E5130, 0xFF0000, 0xFF0000, 0x1F181C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181D, 0x1C161C, 0x513223, 0x513122, 0x523224, 0x1F161C, 0xB6A6A3, 0xFBF2E1, 0xFBF2E1, 0xFBF3E1, 0xFCF3E3, 0xFAF5E1, 0xFBF3E3, 0xFBF4E3, 0xFCF2E1, 0xD6C8C3, 0x1E181C, 0x543323, 0x533323, 0x513323, 0x1D171B, 0xFF0000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1D181B, 0x1E181C, 0x4F3124, 0x1F151C, 0xD3C9C3, 0xFAF2E3, 0xFAF4E3, 0xFBF1E2, 0xFAF2E2, 0xFAF4E2, 0xFCF3E3, 0xFCF2E2, 0xFBF4E3, 0xFBF3E1, 0xFBF1E0, 0xD3C8C1, 0x1E191D, 0x4E3222, 0x1E181C, 0x1D171C, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x4E3022, 0x1D171D, 0x1E181E, 0xD2C8C0, 0xFBF2E1, 0xFAF2DF, 0xFBF3E3, 0xFBF2E2, 0xFBF2E3, 0xFBF3E2, 0xFCF5E2, 0xFBF3E4, 0xFBF5E2, 0xFCF1E2, 0xFAF3E1, 0xFBF0E1, 0xD4C7C2, 0x1F181C, 0x1E181E, 0x4E2F24, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1B20, 0xD0C4C0, 0xD1C6C0, 0xFBF3E1, 0xFAF2E1, 0xFAF2E2, 0xFAF3E2, 0xFBF4E2, 0xFBF3E3, 0xFBF4E3, 0xFBF4E4, 0xFBF4E2, 0xFAF4E2, 0xFCF4E3, 0xFBF4E3, 0xFBF2E3, 0xFBF3E2, 0xFBF3E1, 0xFAF1E1, 0xD0C6BE, 0xD0C5BE, 0x1F1B20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F191F, 0xFAF3E2, 0xFCF2E3, 0xFBF3E2, 0xF9F3E2, 0xFCF4E3, 0xFBF4E3, 0xFCF3E3, 0xFCF4E1, 0xFCF3E3, 0xFCF3E4, 0xFCF4E2, 0xFBF3E3, 0xFCF3E1, 0xFCF3E2, 0xFBF3E2, 0xFCF2E2, 0xFAF2E1, 0xFAF2E1, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1922, 0xD2C6BF, 0xD2C6C3, 0xFAF1E1, 0xFDF3E3, 0xFBF3E4, 0xFBF3E0, 0xFAF5E3, 0xFBF3E2, 0xFCF2E3, 0xFAF4E2, 0xFCF3E2, 0xFBF4E1, 0xFBF4E3, 0xFCF4E3, 0xFBF4E2, 0xFBF3E2, 0xFBF2E2, 0xFAF1E1, 0xD3C9C2, 0xD2C7BF, 0x201921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x262129, 0xD0C5BC, 0xD1C7C0, 0xFAF2E2, 0xFBF2E3, 0xF9F2E2, 0xFCF4E3, 0xFBF3E4, 0xFCF4E3, 0xFBF3E1, 0xFBF3E2, 0xFBF3E3, 0xFDF4E3, 0xFAF5E3, 0xFBF4E4, 0xFCF4E3, 0xFCF2E2, 0xFCF5E3, 0xFBF2E2, 0xFBF4E2, 0xFBF3E2, 0xD2C7BF, 0xCFC7BC, 0x1E191D, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x211C22, 0xAFA3A6, 0xFBF1E1, 0xFAF3E2, 0xFBF3E1, 0xD1C5C1, 0xBEAFAC, 0xFAF4E2, 0xFCF3E3, 0xFBF4E2, 0xFCF4E4, 0xFBF3E2, 0xFBF3E2, 0xFBF4E3, 0xFBF2E3, 0xD4C8C2, 0xD3C9C1, 0xFBF3E2, 0xFAF2E2, 0xFAF3E0, 0xAEA6A7, 0x201A22, 0x1F1720, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201921, 0xD0C6C0, 0xFBF2E2, 0xFAF1E3, 0xD2C7C0, 0xFBF1E2, 0xFAF2E0, 0xFBF3E4, 0xFBF3E4, 0xFBF3E3, 0xFBF3E1, 0xFBF4E3, 0xFBF4E3, 0xFBF3E4, 0xFBF3E3, 0xFBF4E2, 0xFBF1E0, 0xD3C7C1, 0xFCF3E2, 0xF9F2E1, 0xD2C6C0, 0x1F1A21, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201D24, 0xD1C6BE, 0xD3C7C0, 0xF9F2E2, 0xD2C9C2, 0xFAF3E2, 0xFFFFF3, 0xC4B5B2, 0xFBF3E2, 0xFBF2E3, 0xFCF3E2, 0xFDF3E3, 0xFCF2E2, 0xFBF6E3, 0xD6CBC4, 0xF9F0DF, 0xFBF3E2, 0xD4C8C1, 0xFBF2E2, 0xD1C6C1, 0xD0C7BF, 0x1F1921, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201B21, 0xAEA5A7, 0xD2C6BF, 0xF9F1E2, 0xAEA3A6, 0xADA1A5, 0xADA4A7, 0x9C878E, 0xFAF2E2, 0xD3C6C2, 0xFAF3E2, 0xFAF1E1, 0xD5C8C1, 0xFBF4E2, 0xB6A9AA, 0xAEA2A6, 0xACA4A4, 0xAEA4A6, 0xF9F2E1, 0xD2C6C0, 0xADA3A4, 0x1F1A1E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x211A20, 0xB0A7A6, 0xD2C5C0, 0xD3C8C0, 0xD2C8C1, 0xE8DFD2, 0x9A888C, 0xFFFDED, 0xD4C6C2, 0xFAF0E2, 0xFBF2E1, 0xD1C6BF, 0xFAF3E3, 0xB5AAAB, 0xCEC4BD, 0xD3C9C2, 0xD3C7C0, 0xD2C7BF, 0xAEA3A3, 0x201A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1820, 0xAFA4A6, 0xD2C6BF, 0xD2C8BF, 0xFAF1E1, 0xFFFFF1, 0xAEA4A6, 0xA59A9D, 0xD1C7C1, 0xD2C5C0, 0xD2C8BF, 0xD3C6BE, 0xAFA4A5, 0xAEA6A7, 0xF3E8D7, 0xFAF1E0, 0xD2C6C0, 0xD0C6BF, 0xAFA4A5, 0x1F191F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201920, 0xACA3A5, 0xD2C6BF, 0xFAF3DF, 0xF9F0E1, 0xFFFDF1, 0xD3C7BF, 0xD3C8BF, 0xF9F2DF, 0xFAF1DF, 0xD1C4BF, 0xD2C7C0, 0xFAF3E2, 0xF8F2E0, 0xFAF0DF, 0xD0C7BF, 0xAFA2A5, 0x201A20, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1E1920, 0xAFA3A5, 0xD3C6C0, 0xE3D6CC, 0x9E9298, 0xD1C7C0, 0xD2C5BF, 0xF8F0DE, 0xF8EFDC, 0xD3C7C1, 0xD1C5BF, 0xAFA5A4, 0xCFC1BC, 0xD3C7BE, 0xAFA3A6, 0x1F1A1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F181F, 0x1E181F, 0x030101, 0xADA2A4, 0x9F9499, 0xD2C7C0, 0xACA1A3, 0xB2A5A7, 0xCFC6BE, 0xAFA4A3, 0xAEA2A4, 0x201A1E, 0x1F1A1F, 0x1D181F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x201A1E, 0x040104, 0xADA2A4, 0xACA3A3, 0xACA1A4, 0xAEA2A4, 0x201B1F, 0x201B1F, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x1F1B1E, 0x21191D, 0x20191C, 0x1D191E, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 
};


static const uint32_t poro_menu[1024] = {
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x000100, 0x000000, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0x000000, 0x000000, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0xA26745, 0x000000, 0x000000, 0xC6C6C6, 0x000000, 0x000000, 0xC6C6C6, 0x020202, 0x000000, 0xA26745, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x000000, 0x000000,
    0x000000, 0x000000, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0x94664C, 0x94664C, 0x94664C, 0x060606, 0x060606, 0xC8C8C8, 0x060606, 0x060606, 0xC8C8C8, 0x080808, 0x060606, 0x94664C, 0x94664C, 0x94664C, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x000000, 0x000000,
    0x000000, 0x000000, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0x68422D, 0x000000, 0x000000, 0x000000, 0xC6C6C6, 0xC7C7C7, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xC7C7C7, 0xC6C6C6, 0x000000, 0x000000, 0x000000, 0x68422D, 0x68422D, 0xA26745, 0xA26745, 0x68422D, 0xA26745, 0xA26745, 0x000000, 0x000000,
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFDFDFD, 0xFDFDFD, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFDFDFD, 0xFDFDFD, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0x000000, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0x000000, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0x000000, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0x000000, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFDFFFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0x000000, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0x000000, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEADAC, 0xFEADAC, 0xFAAEAE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFAAEAE, 0xFEADAC, 0xFEADAC, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xC4C4C4, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0x000000, 0x070000, 0xFEADAC, 0x000000, 0x000000, 0xFEADAC, 0x0A0000, 0x000000, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0x000000, 0x070000, 0xFEADAC, 0x000000, 0x000000, 0xFEADAC, 0x0A0000, 0x000000, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFDFDFD, 0xC6C6C6, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xC6C6C6, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xFEFEFE, 0xC6C6C6, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0xC6C6C6, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0xFEADAC, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0x000000, 0x000000, 0x000000, 0x000000, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
    0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF, 0xFF00FF,
};

#endif // PORO_SPRITE_H